sayhi: function(){
  console.log("I hate this system");
}
//initialize Express in Cloud Code
//Require cookie and redirect modules
var express = require('express');
var parseExpressHttpsRedirect = require('parse-express-https-redirect');
var parseExpressCookieSession = require('parse-express-cookie-session');
var app = express();

// Global app configuration section
app.set('views', 'cloud/views');  // Specify the folder to find templates
app.set('view engine', 'ejs');    // Set the template engine
app.use(parseExpressHttpsRedirect());  // Require user to be on HTTPS.
app.use(express.bodyParser()); // Middleware for reading request body
app.use(express.cookieParser('BarryWhiteChocolate'));
app.use(parseExpressCookieSession({ cookie: { maxAge: 3600000 } }));



//Root
app.get('/', function(req, res) {
  if (Parse.User.current()) {
    res.redirect('/home-dash');
  }
  else {
    res.render('login', { message: 'Log in here:' });
  }

});


//--------------------------Home Creatuion
var Home = Parse.Object.extend("Home");

//Home Dashboard
app.get('/home-dash', function(req, res) {
  var homeNames = [];
  var homeID = [];
  var user = Parse.User.current();
  var myUsername;
  var query = new Parse.Query(Home);
  user.fetch().then(function(user) {
    myUsername = user.get('username');
  }).then(function() {
    query.find({
      success: function(homes) {
        for (var i = 0; i < homes.length; i++) {
          homeNames.push( homes[i].get('name') );
          homeID.push( homes[i].id );
        }
        res.render('home-dash', {
          homeNames: homeNames,
          homeID: homeID,
          myUsername: myUsername
        });
      },
      error: function(error) { alert("Error: " + error.code + " " + error.message);}
    });
  });
});


//Create a home
app.post('/createHome', function(req, res){
  //Create an instance of a home & name it
  var home = new Home();
    home.set("name", req.body.nameHome );
    home.save(null, {
    success: function(home) {res.redirect('/home-dash');},
    error: function(home, error) {
      alert('Failed to create new object, with error code: ' + error.message);
      res.redirect('/home-dash');
    }
  });
});


//Add user to home
app.post('/addUser', function(req, res){

  Parse.Cloud.useMasterKey();
  var query = new Parse.Query(Parse.User); // Create a new query
  query.equalTo( 'username', req.body.username);
  query.first().then(function(user){
    if ( typeof user.get(req.body.homeId) === "undefined" ) {
      user.set(JSON.stringify(req.body.homeId), 0);
      user.save();
      console.log('YEEEEEEEEEAAAAAHHHHHH!');
    }
    else { console.log(user.get('username') + 'is already added'); }
  }).then(function(){ res.redirect('home-dash'); });

});



//-------------------------------Top Bar -----------------------

//About pages
//Adam did this, hes pretty drunk, might want to double check
app.get('/about', function(req, res) {
    res.render('about');
});

app.get('/about-Lauren', function(req, res) {
	res.render('about-Lauren');
});

app.get('/about-Chening', function(req,res) {
	res.render('about-Chening');
});

app.get('/about-Adam', function(req,res) {
	res.render('about-Adam');
});


//Profile Nav Page
//Adam did this, hes pretty drunk, might want to double check
app.get('/profile', function(req, res) {
	var homeNames = [];
	var user_query = new Parse.Query(Parse.User);

	user_query.find({
		success: function(results) {
      alert("Successfully retrieved " + results.length + " homes.");
      for (var i = 0; i < results.length; i++) {
      	var object = results[i];
      	alert(object.id + '  ' + object.get('username'));
      }
      res.render('profile', {profiles: results});
    },
    error: function(error) {
      alert("Error: " + error.code + " " + error.message);
    }
  });
});


//Grocery List Page
app.get('/grocery_list', function(req, res){
	var groceryList = [];
	var Grocery = Parse.Object.extend("Grocery");
	var grocery_query = new Parse.Query(Grocery);

	grocery_query.find({
	  success: function(results) {
      alert("Successfully retrieved " + results.length + " groceries.");
      // Do something with the returned Parse.Object values
      for (var i = 0; i < results.length; i++) {
        var object = results[i];
        alert(object.id + ' - ' + object.get('item_name'));
      }
      res.render('grocery_list', { groceries: results });
    },
    error: function(error) {
      alert("Error: " + error.code + " " + error.message);
    }
  });
});

// LogIn
app.post('/login', function(req, res) {
  Parse.User.logIn(req.body.username, req.body.password).then(function() {
    res.redirect('/');
  },
  function(error) {
    res.redirect('/');
  });
});


//SignUp
app.post('/signup', function(req, res){

  var user = new Parse.User();
  user.set("username", req.body.username);
  user.set("password", req.body.password);

  user.signUp(null, {
    success: function(user) {
      console.log('We just created a user', user);
    },
    error: function(user, error) {
        console.log("Error:" + error.code + " " + error.message);
    }
  });
  res.redirect('/');
});

//Logout
app.get('/logout', function(req, res) {
  Parse.User.logOut();
  res.redirect('/');
});

// Make item name:
app.post('/make_item', function(req, res){

	// Define Grocery item:
	var Grocery = Parse.Object.extend("Grocery");

	var grocery = new Grocery();
	grocery.set("itemName", req.body.itemName);
	grocery.set("itemCost", req.body.itemCost);
	grocery.set("itemNotes", req.body.itemNotes);


	grocery.save(null, {
		success: function(grocery) {
  		alert('New grocery created with objectId: ' + grocery.id);
      res.redirect('/grocery_list');
	  },
	  error: function(grocery, error) {
  	  alert('Failed to create new object, with error code: Chening!');
	  }
	//name, price, notes, who's in?
	});
});

//app.post('/delete_item', function(req, res){

//	var Grocery = Parse.Object.extend("Grocery");
//	var grocery_query = new Parse.Query(Grocery);

//	grocery_query(ident, {
//		success: grocery_query.destroy({
//			success: function(grocery_query){
//				res.redirect('/grocery_list');
//			},
//			error: function(grocery_query, error){
//			}
//		}),
//		error: function(grocery_query, error) {
//		alert('Nope, didnt work');
//		}
//	});
//});


//function myFunction(ident){
//	var Grocery = Parse.Object.extend("Grocery");
//	var grocery_query = new Parse.Query(Grocery);

//	grocery_query(ident, {
//		success: grocery_query.destroy({
//			success: function(grocery_query){
//			},
//			error: function(grocery_query, error){
//			}
//			}),
//		error: function(grocery, error) {
//		alert('Nope, didnt work');
//		}
//});
//}


// // Example reading from the request query string of an HTTP get request.
// app.get('/test', function(req, res) {
//   // GET http://example.parseapp.com/test?message=hello
//   res.send(req.query.message);
// });

// // Example reading from the request body of an HTTP post request.
// app.post('/test', function(req, res) {
//   // POST http://example.parseapp.com/test (with request body "message=hello")
//   res.send(req.body.message);
// });

// Attach the Express app to Cloud Code.
app.listen();
